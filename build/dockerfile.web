FROM node:22-alpine AS prepare
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV COREPACK_NPM_REGISTRY=https://registry.npmmirror.com
RUN corepack enable && corepack prepare pnpm@10.4.0 --activate
WORKDIR /build
ADD package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc tsconfig.json ./


FROM prepare AS build
ADD ./deps/hofetch/package.json ./deps/hofetch/package.json
ADD ./web/package.json ./web/package.json
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

ADD ./deps/hofetch/tsconfig.json ./deps/hofetch/
ADD ./deps/hofetch/build ./deps/hofetch/build
ADD ./deps/hofetch/src ./deps/hofetch/src
RUN pnpm run init-hofetch

ADD tsconfig.json ./
ADD ./web/tsconfig.json ./web/vite.config.ts ./web/index.html ./web/
ADD ./web/build ./web/build 
ADD ./web/src ./web/src
ADD ./web/public ./web/public
RUN pnpm run --filter=@ijia/web build


FROM nginx:1.26-alpine
WORKDIR /serve/web
ADD ./build/nginx/nginx.conf /etc/nginx/nginx.conf
ADD ./build/nginx/conf.d /etc/nginx/conf.d

ADD ./build/nginx/localhost.crt /tls.crt
ADD ./build/nginx/localhost.key /tls.key

COPY --from=build /build/web/dist .
EXPOSE 443

